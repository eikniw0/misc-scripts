#!/system/bin/env bash

. ~/etc/scripts/terminal.sh
. ~/etc/scripts/debug.sh

set -e -u -o pipefail

OUT='/sdcard/adbfu.log'
ADB_SHELL=''
MODE=''
USER="${USER:-`whoami`}"
PKGS=''

cleanup() {
	unset ADB_SHELL
	unset _pm rmpkg
}
trap 'cleanup' INT HUP QUIT KILL EXIT

pm() {
#	if (( ADB_SHELL )); then
#		printf "executing:  pm $@\n" >>"$OUT"
#		/system/bin/pm $@ >>"$OUT" 2>&1
#	else
		printf "executing:  adb shell pm %s\n" "$@" >>"$OUT"
		adb shell pm $@ >>"$OUT" 2>&1
#	fi
}

list_permissions() {
	case "${1:-fuckit}" in
		sys*)
			pm list permissions | sed 's,^permission:,,' | sort
			;;
		*)
			;;
	esac
}

list_packages() {
	local pm_arg=''

	case "${1:-all}" in
		sys*)
			pm_arg='-s' ;;
		user)
			pm_arg='-3' ;;
		*)
			;;
	esac

	pm list packages $pm_arg | sed 's,^package:,,' | sort
}

get_user_ids() {
	adb shell pm list users | \
		grep 'UserInfo' | \
		sed 's,^.*Info{\([0-9]*\):.*:.*}.*$,\1,'
}

get_user_name() {
	local users="$(get_user_ids)"
	local user

	for user in $users; do
		read num name <<< $(pm list users | \
				grep 'UserInfo' | \
				sed 's,^.*Info{\([0-9]*\):\([A-Za-z].*[A-Za-z]\):c[0-9]*}.*$,\1 \2,')

		if [ $num -eq $1 ]; then
		# Found it
		 	echo "$name"
		 	break
		fi
	done
}

remove_package() {
	[[ $# -eq 1 ]] || return 1

#	local system_apps user_apps users user
#	system_apps="$(list_packages system)"
#	user_apps="$(list_packages user)"
	local pkg="$1"

#	for pkg in "$@"; do
#		if [ -n "$(echo $system_apps | grep $pkg)" ]; then
			# We have a system app
			msg "${bold}removing system package ${cyn}$pkg"

			msg -n "   -> uninstalling updates & reset permissions"
			pm uninstall-system-updates "$pkg" || true
			pm reset-permissions "$pkg" || true
			pm clear "$pkg" || true
			msg " - ${grn}done"

			for user in $(get_user_ids); do
				msg -n "   -> disabling app for user $user"
				pm uninstall -k --user "$user" "$pkg" || true
				pm disable-user --user "$user" "$pkg" || true
				msg " - ${grn}done"
			done

#		elif [ -n "$(echo $user_apps | grep $pkg)" ]; then
#			# user app found
#			msg -n "${bold}uninstalling user package ${cyn}$pkg"
#			pm uninstall "$pkg"
#			msg " - ${grn}done"
#		else
#			msg "$cyn$pkg not found"
#		fi

		echo
#	done
}

remove_packages() {
	local pkg
	for pkg in "$@"; do
		remove_package "$pkg"
	done
}


################################
################################
## START OF THE ACTUAL SCRIPT ##
################################
################################
if [ "${USER}" = 'shell' -o "$USER" = 'root' ]; then
	ADB_SHELL=1
else
	ADB_SHELL=0
fi

for arg in "$@"; do
	case "$arg" in
		-r|--rm|--remove)
			MODE='rm'
			shift 1
			;;
		-*)
			exit 255
			;;
		*)
			PKGS="$PKGS $arg"
			shift 1
			;;
	esac
done

case "$MODE" in
	rm)
		remove_packages $PKGS
		;;
	*)
		exit 237
		;;
esac
